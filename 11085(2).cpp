#include<iostream>
using namespace std;

const int sol[92][8] = { 
{1,5,8,6,3,7,2,4},
{1,6,8,3,7,4,2,5},
{1,7,4,6,8,2,5,3},
{1,7,5,8,2,4,6,3},
{2,4,6,8,3,1,7,5},
{2,5,7,1,3,8,6,4},
{2,5,7,4,1,8,6,3},
{2,6,1,7,4,8,3,5},
{2,6,8,3,1,4,7,5},
{2,7,3,6,8,5,1,4},
{2,7,5,8,1,4,6,3},
{2,8,6,1,3,5,7,4},
{3,1,7,5,8,2,4,6},
{3,5,2,8,1,7,4,6},
{3,5,2,8,6,4,7,1},
{3,5,7,1,4,2,8,6},
{3,5,8,4,1,7,2,6},
{3,6,2,5,8,1,7,4},
{3,6,2,7,1,4,8,5},
{3,6,2,7,5,1,8,4},
{3,6,4,1,8,5,7,2},
{3,6,4,2,8,5,7,1},
{3,6,8,1,4,7,5,2},
{3,6,8,1,5,7,2,4},
{3,6,8,2,4,1,7,5},
{3,7,2,8,5,1,4,6},
{3,7,2,8,6,4,1,5},
{3,8,4,7,1,6,2,5},
{4,1,5,8,2,7,3,6},
{4,1,5,8,6,3,7,2},
{4,2,5,8,6,1,3,7},
{4,2,7,3,6,8,1,5},
{4,2,7,3,6,8,5,1},
{4,2,7,5,1,8,6,3},
{4,2,8,5,7,1,3,6},
{4,2,8,6,1,3,5,7},
{4,6,1,5,2,8,3,7},
{4,6,8,2,7,1,3,5},
{4,6,8,3,1,7,5,2},
{4,7,1,8,5,2,6,3},
{4,7,3,8,2,5,1,6},
{4,7,5,2,6,1,3,8},
{4,7,5,3,1,6,8,2},
{4,8,1,3,6,2,7,5},
{4,8,1,5,7,2,6,3},
{4,8,5,3,1,7,2,6},
{5,1,4,6,8,2,7,3},
{5,1,8,4,2,7,3,6},
{5,1,8,6,3,7,2,4},
{5,2,4,6,8,3,1,7},
{5,2,4,7,3,8,6,1},
{5,2,6,1,7,4,8,3},
{5,2,8,1,4,7,3,6},
{5,3,1,6,8,2,4,7},
{5,3,1,7,2,8,6,4},
{5,3,8,4,7,1,6,2},
{5,7,1,3,8,6,4,2},
{5,7,1,4,2,8,6,3},
{5,7,2,4,8,1,3,6},
{5,7,2,6,3,1,4,8},
{5,7,2,6,3,1,8,4},
{5,7,4,1,3,8,6,2},
{5,8,4,1,3,6,2,7},
{5,8,4,1,7,2,6,3},
{6,1,5,2,8,3,7,4},
{6,2,7,1,3,5,8,4},
{6,2,7,1,4,8,5,3},
{6,3,1,7,5,8,2,4},
{6,3,1,8,4,2,7,5},
{6,3,1,8,5,2,4,7},
{6,3,5,7,1,4,2,8},
{6,3,5,8,1,4,2,7},
{6,3,7,2,4,8,1,5},
{6,3,7,2,8,5,1,4},
{6,3,7,4,1,8,2,5},
{6,4,1,5,8,2,7,3},
{6,4,2,8,5,7,1,3},
{6,4,7,1,3,5,2,8},
{6,4,7,1,8,2,5,3},
{6,8,2,4,1,7,5,3},
{7,1,3,8,6,4,2,5},
{7,2,4,1,8,5,3,6},
{7,2,6,3,1,4,8,5},
{7,3,1,6,8,5,2,4},
{7,3,8,2,5,1,6,4},
{7,4,2,5,8,1,3,6},
{7,4,2,8,6,1,3,5},
{7,5,3,1,6,8,2,4},
{8,2,4,1,7,5,3,6},
{8,2,5,3,1,7,4,6},
{8,3,1,6,2,5,7,4},
{8,4,1,3,6,2,7,5} };

int input[10], minMoves;

void solve() {
	for (int i = 0; i < 92; i++) {
		int moves = 0;
		for (int j = 0; j < 8; j++)
			if (input[j] != sol[i][j])
				moves++;
		if (minMoves > moves)
			minMoves = moves;
	}
}

int main() {
	int caseI = 0;
	while (cin >> input[0]) {
		for (int i = 1; i < 8; i++)
			cin >> input[i];
		minMoves = 8;
		solve();
		cout << "Case " << ++caseI << ": " << minMoves << endl;
	}
	return 0;
}